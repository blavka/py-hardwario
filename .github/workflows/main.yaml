name: Main

on:
  push:
    paths-ignore:
      - '**/README.md'
      - '.*'
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  codestyle:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - run: |
          pip install poetry
          poetry install
          poetry run pycodestyle --ignore=E501 src tests

  test_build:
    needs: codestyle
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.7'
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - run: |
          pip install poetry
          poetry install
          poetry run hardwario --version
          poetry build

  deploy:
    needs: test_build
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-latest
    environment: deploy
    steps:
      - uses: actions/checkout@v3
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Publish
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: __token__
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: |
          pip install poetry
          poetry install
          sed -r -i'' "s/\"1\.0\.0\"/\"$RELEASE_VERSION\"/g" pyproject.toml
          sed -r -i'' "s/'1\.0\.0'/'$RELEASE_VERSION'/g" src/hardwario/hardwario/__init__.py
          poetry publish --build

  build:
    name: Build packages
    needs: test_build
    if: ${{ github.event_name == 'release' }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            TARGET: ubuntu-22.04
            CMD_BUILD: poetry run pyinstaller -F -w -n hardwario cli.py
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: >
                poetry run pyinstaller -F -w -n hardwario cli.py &&
                cd dist/ &&
                zip -r9 hardwario hardwario.app/
            OUT_FILE_NAME: hardwario.zip
            ASSET_MIME: application/zip
          - os: windows-latest
            TARGET: windows
            CMD_BUILD: poetry run pyinstaller -F -w -n hardwario cli.py
            OUT_FILE_NAME: hardwario.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: 3.10
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Build with pyinstaller for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url
    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
